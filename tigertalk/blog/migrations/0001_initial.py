# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-18 18:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('blockedOrNot', models.BooleanField(default=False)),
                ('inappropriateCount', models.IntegerField(default=0, verbose_name='Inappropriate')),
                ('helpfulCount', models.IntegerField(default=0, verbose_name='Helpful')),
            ],
            options={
                'verbose_name_plural': 'Answers',
                'verbose_name': 'Answer',
                'ordering': ('question', 'user'),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('blockedOrNot', models.BooleanField(default=False)),
                ('inappropriateCount', models.IntegerField(default=0, verbose_name='Inappropriate')),
            ],
            options={
                'verbose_name_plural': 'Questions',
                'verbose_name': 'Question',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=30)),
                ('questions', models.ManyToManyField(related_name='_tag_questions_+', to='blog.Question')),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'verbose_name': 'Tag',
                'ordering': ('text',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField()),
                ('netid', models.CharField(max_length=50)),
                ('modOrNot', models.BooleanField(default=False)),
                ('blockedOrNot', models.BooleanField(default=False)),
                ('classYear', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Users',
                'verbose_name': 'User',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='inappropriateId',
            field=models.ManyToManyField(related_name='_question_inappropriateId_+', to='blog.User'),
        ),
        migrations.AddField(
            model_name='question',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.User'),
        ),
        migrations.AddField(
            model_name='answer',
            name='helpfulId',
            field=models.ManyToManyField(related_name='_answer_helpfulId_+', to='blog.User'),
        ),
        migrations.AddField(
            model_name='answer',
            name='inappropriateId',
            field=models.ManyToManyField(related_name='_answer_inappropriateId_+', to='blog.User'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.User'),
        ),
    ]
